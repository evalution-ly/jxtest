# Source: docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: jx
  labels:
    app: docker-registry
    chart: docker-registry-3.0.0
    release: docker-registry
    heritage: Helm
    gitops.jenkins-x.io/pipeline: 'namespaces'
  annotations:
    meta.helm.sh/release-name: 'docker-registry'
    meta.helm.sh/release-namespace: 'jx'
    wave.pusher.com/update-on-config-change: 'true'
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: docker-registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: docker-registry
      annotations:
        checksum/config: cc20834a5c4b09ffa1968fdafb4a7531bb1e2ed2734c3c01659f4a8dd7679c7d
        checksum/secret: 301acbf86a2379d8b64d78c167fa8f7c9de4a0bfd26793a1d2fceea519c41089
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsUser: 1000
        supplementalGroups: []
        sysctls: []
      containers:
      - name: docker-registry
        image: "registry:3.0.0"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/registry
        - serve
        - /etc/distribution/config.yml
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /
            port: 5000
        readinessProbe:
          httpGet:
            path: /
            port: 5000
        resources: {}
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: docker-registry-secret
              key: haSharedSecret
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: "/var/lib/registry"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: "docker-registry-config"
          mountPath: /etc/distribution
        - name: data
          mountPath: /var/lib/registry/
      volumes:
      - name: docker-registry-config
        configMap:
          name: docker-registry-config
      - name: data
        emptyDir: {}
